{{- if and (or .Values.agentManager.url .Values.agentManager_url_1) }}
{{- if or .Values.monitor.application.autoattach.java.enabled .Values.autoattach_java_enabled .Values.monitor.application.autoattach.dotnet.enabled .Values.autoattach_dotnet_enabled .Values.monitor.application.jmx.enabled .Values.kubernetes_remote_jmx_enabled .Values.monitor.container.dockerstats.enabled .Values.kubernetes_monitor_enabled .Values.monitor.container.prometheus.exporter.enabled }}
# DaemonSet Configuration
# Agent from Container1 will be reported to <Node_Name>|Infrastructure|Agent
# Agent from Container2 will be reported to <Node_Name>|Application|JMX Agent
{{- if or .Values.k8slegacy }}
apiVersion: extensions/v1beta1
{{ else }}
apiVersion: apps/v1
{{ end }}
kind: DaemonSet
metadata:
  name: app-container-monitor
  namespace: {{ .Release.Namespace }}
  labels:
    tier: monitoring
    app: cagent


spec:
  # oc adm policy add-scc-to-user privileged -z default
  selector:
    matchLabels:
      app: caagent
  template:
    metadata:
      labels:
        app: caagent
      annotations:
        ca.broadcom.application.name: container-monitoring
    spec:
      hostPID: true
      hostIPC: true
      hostNetwork: true
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node-role.kubernetes.io/storage
        effect: NoSchedule
      - key: node-role.kubernetes.io/infra
        effect: NoSchedule
      serviceAccountName: uma
      initContainers:
      - name: init-clusterinfo
        image: {{ or .Values.imageName .Values.image }}
        command: ['bash', '-c', 'until [ $(curl --connect-timeout 5 --max-time 10 --write-out %{http_code} --silent --output /dev/null ${CLUSTERINFO_SERVICE_HOST}:${CLUSTERINFO_SERVICE_PORT}/up) -eq 200 ]; do sleep 2; done']
      containers:
      - name: containerinfo
        image:  {{ or .Values.imageName .Values.image }}
        imagePullPolicy: Always
        command: ["/containerinfo-linux-amd64","--config=/usr/local/openshift/config/config.yaml"]
        env:
          - name: CAAPM_CONTAINERINFO_PORT
            value: "7777"
          - name: CAAPM_CONTAINERINFO_LOG_LEVEL
            value: "INFO"
          - name: CAAPM_CONTAINERINFO_STATS_INTERVAL
            value: "15"
        livenessProbe:
          httpGet:
            path: /runtime/info
            port: 7777
          initialDelaySeconds: 60
          periodSeconds: 60
        resources:
          limits:
            cpu: 200m
            memory: 150Mi
        volumeMounts:
          - name: dockersock
            mountPath: /var/run/docker.sock
            readOnly: true
          - name: criosock
            mountPath: /var/run/crio/crio.sock
            readOnly: true
          - name: sys
            mountPath: /host/sys
            readOnly: true
          - name: proc
            mountPath: /host/proc
            readOnly: true
      - env:
{{- if or .Values.monitor.container.dockerstats.enabled .Values.kubernetes_monitor_enabled }}
        - name: containerflow
          value: disabled
{{ end }}
        - name: agentManager_url_1
          valueFrom:
            configMapKeyRef:
              key: agentManager_url_1
              name: caaiops-config-common
{{- if or .Values.agentManager.credential .Values.agentManager_credential }}
        - name: agentManager_credential
          valueFrom:
            configMapKeyRef:
              key: agentManager_credential
              name: caaiops-config-common
{{ end }}
{{- if .Values.agentManager.httpProxy.host }}
        - name: apmenv_agentManager_httpProxy_host
          valueFrom:
            configMapKeyRef:
              key: agentManager_httpProxy_host
              name: caaiops-config-common
{{ end }}
{{- if .Values.agentManager.httpProxy.port }}
        - name: apmenv_agentManager_httpProxy_port
          valueFrom:
            configMapKeyRef:
              key: agentManager_httpProxy_port
              name: caaiops-config-common
{{ end }}
{{- if .Values.agentManager.httpProxy.username }}
        - name: apmenv_agentManager_httpProxy_username
          valueFrom:
            configMapKeyRef:
              key: agentManager_httpProxy_username
              name: caaiops-config-common
{{ end }}
{{- if .Values.agentManager.httpProxy.password }}
        - name: apmenv_agentManager_httpProxy_password
          valueFrom:
            configMapKeyRef:
              key: agentManager_httpProxy_password
              name: caaiops-config-common
{{ end }}
        - name: apmenv_introscope_agent_connection_compatibility_version
          valueFrom:
            configMapKeyRef:
              key: agentManager_version
              name: caaiops-config-common
        - name: type
          value: {{ .Values.type }}
        - name: interval
          value: "60"
        - name: DOCKER_STATS_CGROUP_MODE
          value: enabled
        - name: apmenv_introscope_agent_extensions_bundles_load
          value: NodeExtension,{{ if or .Values.monitor.application.autoattach.java.enabled .Values.autoattach_java_enabled }} java-attach,{{end}}{{ if or .Values.monitor.application.autoattach.dotnet.enabled .Values.autoattach_dotnet_enabled }} dotnet-attach,{{end}}kubernetes-overrider,{{ if and ( or .Values.monitor.container.dockerstats.enabled .Values.kubernetes_monitor_enabled) }}OpenshiftMonitor,HostMonitor,{{end}}{{ if or .Values.monitor.container.prometheus.exporter.enabled .Values.monitor.application.jmx.enabled .Values.kubernetes_monitor_node_container_prometheus_exporters_enabled .Values.kubernetes_remote_jmx_enabled }}KubernetesRemoteMonitor,{{end}}
{{- if or .Values.monitor.application.autoattach.java.enabled .Values.autoattach_java_enabled .Values.monitor.application.autoattach.dotnet.enabled .Values.autoattach_dotnet_enabled }}
        ##########################
        # Auto Attach properties:
        ##########################
        - name: apmenv_autoattach_enable_agentNameSuffix
          value: "false"
        # Free memory threshold required for attaching to containers (%)
        - name: apmenv_autoattach_free_memory_threshold
          value: "50.00"
        # Interval for attaching to memory unbounded containers (sec). One unbounded container will be attached to per interval.
        - name: apmenv_autoattach_unbounded_container_attach_interval
          value: "300"
        # Operation Mode for Auto Attach (whitelist/blacklist).
        # whitelist: will only attach to processes marked with env variable CA_APM_MONITORING_ENABLED=true
        # blacklist: will attach to all processes except those marked with env variable CA_APM_MONITORING_ENABLED=false
        - name: apmenv_autoattach_filter_type
          value: "{{ default "whitelist" (or .Values.monitor.application.autoattach.filterType .Values.autoattach_filter_type) }}"
{{- if or .Values.monitor.application.autoattach.java.enabled .Values.autoattach_java_enabled }}
        - name: apmenv_autoattach_java_enabled_applications
          value: " "
        # Properties for aggressively monitoring every JVM
        - name: apmenv_autoattach_java_proactiveMode_enabled
          value: "true"
        - name: apmenv_autoattach_java_proactiveMode_agent_load_delay
          value: "300"
{{- if or (or .Values.monitor.application.autoattach.java.propertiesOverride .Values.autoattach_java_agent_extra_properties) .Values.monitor.application.opentracing.correlation.enabled }}
        - name: apmenv_autoattach_java_proactiveMode_agent_extra_properties
          value: {{ if or .Values.monitor.application.opentracing.correlation.enabled }}introscope.agent.opentracing.enable=true,{{end}}{{ or .Values.monitor.application.autoattach.java.propertiesOverride .Values.autoattach_java_agent_extra_properties}}
{{ end }}
{{ end }}
{{- if or .Values.monitor.application.autoattach.dotnet.enabled .Values.autoattach_dotnet_enabled }}
        - name: apmenv_autoattach_net_enabled_applications
          value: " "
        # Properties for aggressively monitoring every.NET Runtime
        - name: apmenv_autoattach_net_proactiveMode_enabled
          value: "true"
        - name: apmenv_autoattach_net_proactiveMode_agent_load_delay
          value: "30"
{{- if or (or .Values.monitor.application.autoattach.dotnet.propertiesOverride .Values.autoattach_dotnet_agent_extra_properties) }}
        - name: apmenv_autoattach_net_proactiveMode_agent_extra_properties
          value: {{ or .Values.monitor.application.autoattach.dotnet.propertiesOverride .Values.autoattach_dotnet_agent_extra_properties}}
{{ end }}
{{ end }}

{{end}}
{{- if or .Values.monitor.application.jmx.enabled  .Values.monitor.container.prometheus.exporter.enabled .Values.kubernetes_remote_jmx_enabled .Values.kubernetes_monitor_node_container_prometheus_exporters_enabled }}
        - name: apmenv_com_ca_apm_kubernetes_remote_monitor_type
          value: {{ if or .Values.monitor.application.jmx.enabled .Values.kubernetes_remote_jmx_enabled }}jmx,{{end}}{{ if and (or .Values.monitor.container.prometheus.exporter.enabled .Values.kubernetes_monitor_node_container_prometheus_exporters_enabled) }}prometheus{{end}}
        - name: apmenv_com_ca_apm_kubernetes_autodiscovery_local
          value: "true"
{{end}}
        - name: nodename
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: apmenv_com_ca_apm_kubernetes_clusterName
          valueFrom:
            configMapKeyRef:
              key: cluster_name
              name: caaiops-config-common

{{- if or .Values.monitor.container.prometheus.exporter.enabled .Values.kubernetes_monitor_node_container_prometheus_exporters_enabled}}
        - name: apmenv_com_ca_apm_kubernetes_prometheus_datafile
          value: node-exporter, cadvisor
{{end}}
        - name: apmenv_introscope_agent_hostName
          valueFrom:
            configMapKeyRef:
              key: agentNaming_daemonset_apmia_host
              name: caaiops-config-common
        - name: apmenv_introscope_agent_customProcessName
          valueFrom:
            configMapKeyRef:
              key: cluster_name
              name: caaiops-config-common
        - name: apmenv_introscope_agent_agentName
          valueFrom:
            configMapKeyRef:
              key: agentNaming_daemonset_apmia_agent
              name: caaiops-config-common
        - name: MIN_HEAP_VAL_IN_MB
          value: "64"
        - name: apmenv_introscope_epagent_config_httpServerPort
          value: "8888"
        - name: REDUCE_METRIC_EXPLOSION
          value: "false"
        - name: apmenv_com_ca_apm_kubernetes_monitor_legacy
          value: {{ if .Values.agentManager.version }} "true" {{ else }} "false" {{ end }}
{{- if .Values.namespaces }}
        - name: KUBERNETES_NAMESPACE_MONITOR_LIST
          value: "{{ .Values.namespaces }}"
{{ end }}

        name: podmonitor
        image:  {{ or .Values.imageName .Values.image }}
{{- if or .Values.EnableResourceLimits .Values.kubernetes_resource_bound }}
        resources:
          limits:
            cpu: 2
            memory: 1G
          requests:
            cpu: 200m
            memory: 300Mi
{{end}}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8888
          initialDelaySeconds: 60
          periodSeconds: 60

        imagePullPolicy: Always
        #        resources:
        #          limits:
        #            cpu: 500m
        #            memory: 700Mi
        #          requests:
        #            cpu: 200m
        #            memory: 300Mi
        securityContext:
          privileged: true



        volumeMounts:
        - name: dockersock
          mountPath: /var/run/docker.sock
          readOnly: true
        - name: dev
          mountPath: /host/dev
          readOnly: true
        - name: run
          mountPath: /host/run
          readOnly: true
        - name: sys
          mountPath: /host/sys
          readOnly: true
        - name: boot
          mountPath: /host/boot
          readOnly: true
        - name: home
          mountPath: /host/home
          readOnly: true
        - name: proc
          mountPath: /host/proc
          readOnly: true

{{- if or .Values.monitor.container.prometheus.exporter.enabled .Values.kubernetes_monitor_node_container_prometheus_exporters_enabled }}
        - name: config-volume
          mountPath: /usr/local/openshift/apmia/extensions/KubernetesRemoteMonitor/config/prometheus
{{end}}
      volumes:
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      - name: criosock
        hostPath:
          path: /var/run/crio/crio.sock
      - name: dev
        hostPath:
          path: /dev
      - name: run
        hostPath:
          path: /run
      - name: sys
        hostPath:
          path: /sys
      - name: boot
        hostPath:
          path: /boot
      - name: home
        hostPath:
          path: /home
      - name: proc
        hostPath:
          path: /proc
{{- if or .Values.monitor.container.prometheus.exporter.enabled .Values.kubernetes_monitor_node_container_prometheus_exporters_enabled }}
      - name: config-volume
        configMap:
          name: caaiops-config-prometheus
{{end}}

{{ end }}
{{ end }}

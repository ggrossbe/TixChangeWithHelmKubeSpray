{{- if and (or .Values.agentManager.url .Values.agentManager_url_1) }}
{{- if eq .Values.role "team" }}
---
{{ else }}

{{- if or .Values.monitor.application.autoattach.java.enabled .Values.autoattach_java_enabled .Values.monitor.application.autoattach.dotnet.enabled .Values.autoattach_dotnet_enabled .Values.monitor.application.jmx.enabled .Values.kubernetes_remote_jmx_enabled .Values.monitor.container.dockerstats.enabled .Values.kubernetes_monitor_enabled .Values.monitor.container.prometheus.exporter.enabled }}
# DaemonSet Configuration
# Agent from Container1 will be reported to <Node_Name>|Infrastructure|Agent
# Agent from Container2 will be reported to <Node_Name>|Application|JMX Agent
{{- if or .Values.k8slegacy }}
apiVersion: extensions/v1beta1
{{ else }}
apiVersion: apps/v1
{{ end }}
kind: DaemonSet
metadata:
  name: app-container-monitor
  namespace: {{ .Release.Namespace }}
  labels:
    tier: monitoring
    app: cagent


spec:
  # oc adm policy add-scc-to-user privileged -z default
  selector:
    matchLabels:
      app: caagent
  template:
    metadata:
      labels:
        app: caagent
      annotations:
        ca.broadcom.application.name: container-monitoring
    spec:
      hostPID: true
      hostIPC: true
      hostNetwork: true
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node-role.kubernetes.io/storage
        effect: NoSchedule
      - key: node-role.kubernetes.io/infra
        effect: NoSchedule
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      serviceAccountName: uma
      initContainers:
      - name: init-clusterinfo
        image: {{ or .Values.imageName .Values.image }}
        command: ['bash', '-c', 'until [ $(curl --connect-timeout 5 --max-time 10 --write-out %{http_code} --silent --output /dev/null ${CLUSTERINFO_SERVICE_HOST}:${CLUSTERINFO_SERVICE_PORT}/up) -eq 200 ]; do sleep 2; done']
        resources:
          limits:
            cpu: 20m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 10Mi

      containers:
      - name: containerinfo
        image:  {{ or .Values.imageName .Values.image }}
        imagePullPolicy: Always
{{- if or .Values.isAcc }}
        command: ["/opt/uma/utility/containerinfo-linux-amd64","--config=/opt/uma/utility/config/config.yaml"]
{{ else }}
        command: ["/containerinfo-linux-amd64","--config=/usr/local/openshift/config/config.yaml"]
{{ end }}
        securityContext:
          privileged: true
          runAsUser: 0
        env:
          - name: CAAPM_CONTAINERINFO_PORT
            value: "7777"
          - name: CAAPM_CONTAINERINFO_LOG_LEVEL
            value: "INFO"
{{- if or .Values.isAcc }}
          - name: CAAPM_CONTAINERINFO_LOG_PATH
            value: "/opt/uma/logs"
{{ end }}
          - name: CAAPM_CONTAINERINFO_STATS_INTERVAL
            value: "60"
{{- if eq .Values.role "admin" }}
          - name: CAAPM_CONTAINERINFO_COLLECTOR_SERVICE_ENABLED
            value: "true"
          - name: CAAPM_CONTAINERINFO_COLLECTOR_SERVICE_PORT
            value: "7779"
{{ end }}
        livenessProbe:
          httpGet:
            path: /runtime/info
            port: 7777
          initialDelaySeconds: 60
          periodSeconds: 60
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
          - name: dockersock
            mountPath: /var/run/docker.sock
            readOnly: true
          - name: criosock
            mountPath: /var/run/crio/crio.sock
            readOnly: true
          - name: sys
            mountPath: /host/sys
            readOnly: true
          - name: proc
            mountPath: /host/proc
            readOnly: true
          - name: dockeroverlay
            mountPath: /host/var/lib/docker/overlay
            readOnly: true
          - name: dockeroverlay2
            mountPath: /host/var/lib/docker/overlay2
            readOnly: true
          - name: criooverlay
            mountPath: /host/var/lib/containers/storage/overlay
            readOnly: true
          - name: criooverlaycontainers
            mountPath: /host/var/lib/containers/storage/overlay-containers
            readOnly: true
      - env:
{{- if or .Values.monitor.container.dockerstats.enabled .Values.kubernetes_monitor_enabled }}
        - name: containerflow
          value: disabled
{{ end }}
        - name: agentManager_url_1
          valueFrom:
            configMapKeyRef:
              key: agentManager_url_1
{{- if eq .Values.role "common" }}
              name: caaiops-config-common
{{- else }}
              name: caaiops-config-{{- .Values.role | default "common" }}{{- .Values.id | default "1" }}
{{ end }}
{{- if or .Values.agentManager.credential .Values.agentManager_credential }}
        - name: agentManager_credential
          valueFrom:
            configMapKeyRef:
              key: agentManager_credential
              {{- if eq .Values.role "common" }}
              name: caaiops-config-common
              {{- else }}
              name: caaiops-config-{{- .Values.role | default "common" }}{{- .Values.id | default "1" }}
              {{ end }}
{{ end }}
{{- if .Values.agentManager.httpProxy.host }}
        - name: apmenv_agentManager_httpProxy_host
          valueFrom:
            configMapKeyRef:
              key: agentManager_httpProxy_host
              {{- if eq .Values.role "common" }}
              name: caaiops-config-common
              {{- else }}
              name: caaiops-config-{{- .Values.role | default "common" }}{{- .Values.id | default "1" }}
              {{ end }}
{{ end }}
{{- if .Values.agentManager.httpProxy.port }}
        - name: apmenv_agentManager_httpProxy_port
          valueFrom:
            configMapKeyRef:
              key: agentManager_httpProxy_port
              {{- if eq .Values.role "common" }}
              name: caaiops-config-common
              {{- else }}
              name: caaiops-config-{{- .Values.role | default "common" }}{{- .Values.id | default "1" }}
              {{ end }}
{{ end }}
{{- if .Values.agentManager.httpProxy.username }}
        - name: apmenv_agentManager_httpProxy_username
          valueFrom:
            configMapKeyRef:
              key: agentManager_httpProxy_username
              {{- if eq .Values.role "common" }}
              name: caaiops-config-common
              {{- else }}
              name: caaiops-config-{{- .Values.role | default "common" }}{{- .Values.id | default "1" }}
              {{ end }}
{{ end }}
{{- if .Values.agentManager.httpProxy.password }}
        - name: apmenv_agentManager_httpProxy_password
          valueFrom:
            configMapKeyRef:
              key: agentManager_httpProxy_password
              {{- if eq .Values.role "common" }}
              name: caaiops-config-common
              {{- else }}
              name: caaiops-config-{{- .Values.role | default "common" }}{{- .Values.id | default "1" }}
              {{ end }}
{{ end }}
        - name: apmenv_introscope_agent_connection_compatibility_version
          valueFrom:
            configMapKeyRef:
              key: agentManager_version
              {{- if eq .Values.role "common" }}
              name: caaiops-config-common
              {{- else }}
              name: caaiops-config-{{- .Values.role | default "common" }}{{- .Values.id | default "1" }}
              {{ end }}
        - name: type
          value: {{ .Values.type }}
        - name: interval
          value: "60"
        - name: DOCKER_STATS_CGROUP_MODE
          value: enabled
        - name: apmenv_introscope_epagent_config_httpServerPort
          value: "8888"
        - name: apmenv_introscope_agent_extensions_bundles_load
{{ if or .Values.isAcc }}
          value: {{ if or .Values.monitor.application.node.enabled }}{{ .Values.extensionFolders.NodeExtension }},{{- end }}{{ if or .Values.monitor.application.python.enabled }}{{ .Values.extensionFolders.PythonExtension }},{{- end }}{{ if or .Values.monitor.application.cpp.enabled }}{{ .Values.extensionFolders.CppExtension }},{{- end }}{{ if or .Values.monitor.application.autoattach.java.enabled .Values.autoattach_java_enabled .Values.monitor.application.autoattach.dotnet.enabled .Values.autoattach_dotnet_enabled }}{{ if .Values.extensionFolders -}} {{ .Values.extensionFolders.autoattach | default "autoattach" }} {{- else -}} autoattach {{- end }},{{end}}{{ if and ( or .Values.monitor.container.dockerstats.enabled .Values.kubernetes_monitor_enabled) }}{{ if .Values.extensionFolders -}} {{ .Values.extensionFolders.OpenshiftMonitor | default "OpenshiftMonitor" }} {{- else -}} OpenshiftMonitor {{- end }},{{ if .Values.extensionFolders -}} {{ .Values.extensionFolders.HostMonitor | default "HostMonitor" }} {{- else -}} HostMonitor {{- end }},{{end}}{{ if or .Values.monitor.container.prometheus.exporter.enabled .Values.monitor.application.jmx.enabled .Values.kubernetes_monitor_node_container_prometheus_exporters_enabled .Values.kubernetes_remote_jmx_enabled }}{{ if .Values.extensionFolders -}} {{ .Values.extensionFolders.KubernetesRemoteMonitor | default "KubernetesRemoteMonitor" }} {{- else -}} KubernetesRemoteMonitor {{- end }},{{end}}
{{ else }}
          value: {{ if .Values.extensionFolders -}} {{ .Values.extensionFolders.NodeExtension | default "NodeExtension" }} {{- else -}} NodeExtension {{- end }} ,{{ if .Values.extensionFolders -}} {{ .Values.extensionFolders.PythonExtension | default "PythonExtension" }} {{- else -}} PythonExtension {{- end }},{{ if .Values.extensionFolders -}} {{ .Values.extensionFolders.CppExtension | default "CppExtension" }} {{- else -}} CppExtension {{- end }},{{ if or .Values.monitor.application.autoattach.java.enabled .Values.autoattach_java_enabled .Values.monitor.application.autoattach.dotnet.enabled .Values.autoattach_dotnet_enabled }}{{ if .Values.extensionFolders -}} {{ .Values.extensionFolders.autoattach | default "autoattach" }} {{- else -}} autoattach {{- end }},{{end}}{{ if and ( or .Values.monitor.container.dockerstats.enabled .Values.kubernetes_monitor_enabled) }}{{ if .Values.extensionFolders -}} {{ .Values.extensionFolders.OpenshiftMonitor | default "OpenshiftMonitor" }} {{- else -}} OpenshiftMonitor {{- end }},{{ if .Values.extensionFolders -}} {{ .Values.extensionFolders.HostMonitor | default "HostMonitor" }} {{- else -}} HostMonitor {{- end }},{{end}}{{ if or .Values.monitor.container.prometheus.exporter.enabled .Values.monitor.application.jmx.enabled .Values.kubernetes_monitor_node_container_prometheus_exporters_enabled .Values.kubernetes_remote_jmx_enabled }}{{ if .Values.extensionFolders -}} {{ .Values.extensionFolders.KubernetesRemoteMonitor | default "KubernetesRemoteMonitor" }} {{- else -}} KubernetesRemoteMonitor {{- end }},{{end}}

{{ end }}
{{- if or .Values.monitor.application.autoattach.java.enabled .Values.autoattach_java_enabled .Values.monitor.application.autoattach.dotnet.enabled .Values.autoattach_dotnet_enabled }}
        ##########################
        # Auto Attach properties:
        ##########################
        # Free memory threshold required for attaching to containers (%)
        - name: apmenv_autoattach_free_memory_threshold
          value: "25.00"
        # Interval for attaching to memory unbounded containers (sec). One unbounded container will be attached to per interval.
        - name: apmenv_autoattach_unbounded_container_attach_interval
          value: "180"
        # Operation Mode for Auto Attach (whitelist/blacklist).
        # whitelist: will only attach to processes marked with env variable CA_APM_MONITORING_ENABLED=true
        # blacklist: will attach to all processes except those marked with env variable CA_APM_MONITORING_ENABLED=false
        - name: apmenv_autoattach_filter_type
          value: "{{ default "whitelist" (or .Values.monitor.application.autoattach.filterType .Values.autoattach_filter_type) }}"
{{- if or .Values.monitor.application.autoattach.java.enabled .Values.autoattach_java_enabled }}
        - name: apmenv_autoattach_dynamicPropertyResolution_enabled
          value: "true"
        - name: apmenv_autoattach_dynamicPropertyResolution_properties_list
          value: "introscope.agent.hostName,com.wily.introscope.agent.agentName"
        - name: apmenv_autoattach_introscope_agent_hostName
          value: "{{ .Values.monitor.application.autoattach.dynamicPropertyResolution.hostName }}"
        - name: apmenv_autoattach_com_wily_introscope_agent_agentName
          value: "{{ .Values.monitor.application.autoattach.dynamicPropertyResolution.agentName }}"
        - name: apmenv_autoattach_java_enabled_applications
          value: "{{ .Values.monitor.application.autoattach.java.enabledApplications | default " " }}"
        # Properties for aggressively monitoring every JVM
        - name: apmenv_autoattach_java_proactiveMode_enabled
          value: {{ if .Values.isAcc }}"false"{{ else }}"true"{{ end }}
        #- name: apmenv_autoattach_java_proactiveMode_agent_load_delay
        #  value: "300"
{{- if or (or .Values.monitor.application.autoattach.java.propertiesOverride .Values.autoattach_java_agent_extra_properties) .Values.monitor.application.opentracing.correlation.enabled }}
        - name: apmenv_autoattach_java_proactiveMode_agent_extra_properties
          value: {{ if or .Values.monitor.application.opentracing.correlation.enabled }}introscope.agent.opentracing.enable=true,{{end}}{{ or .Values.monitor.application.autoattach.java.propertiesOverride .Values.autoattach_java_agent_extra_properties}}
{{ end }}
{{ end }}
{{- if or .Values.monitor.application.autoattach.dotnet.enabled .Values.autoattach_dotnet_enabled }}
        - name: apmenv_autoattach_net_enabled_applications
          value: "{{ .Values.monitor.application.autoattach.dotnet.enabledApplications | default " " }}"
        # Properties for aggressively monitoring every.NET Runtime
        - name: apmenv_autoattach_net_proactiveMode_enabled
          value: {{ if .Values.isAcc }}"false"{{ else }}"true"{{ end }}
        #- name: apmenv_autoattach_net_proactiveMode_agent_load_delay
        #  value: "30"
{{- if or (or .Values.monitor.application.autoattach.dotnet.propertiesOverride .Values.autoattach_dotnet_agent_extra_properties) }}
        - name: apmenv_autoattach_net_proactiveMode_agent_extra_properties
          value: {{ or .Values.monitor.application.autoattach.dotnet.propertiesOverride .Values.autoattach_dotnet_agent_extra_properties}}
{{ end }}
{{ end }}
        # Properties for trace logging
        #- name: apmenv_log4j_logger_IntroscopeAgent
        #  value: "TRACE#com.wily.util.feedback.Log4JSeverityLevel, logfile"
        #- name: apmenv_log4j_logger_IntroscopeAgent_AutoAttach
        #  value: "TRACE#com.wily.util.feedback.Log4JSeverityLevel, logfile"
        #- name: apmenv_log4j_additivity_IntroscopeAgent_AutoAttach
        #  value: "false"
        #- name: apmenv_log4j_appender_logfile_MaxFileSize
        #  value: "200MB"
        #- name: apmenv_log4j_appender_logfile_MaxBackupIndex
        #  value: "10"
{{end}}
{{- if or .Values.monitor.application.jmx.enabled  .Values.monitor.container.prometheus.exporter.enabled .Values.kubernetes_remote_jmx_enabled .Values.kubernetes_monitor_node_container_prometheus_exporters_enabled }}
        - name: apmenv_com_ca_apm_kubernetes_remote_monitor_type
          value: {{ if or .Values.monitor.application.jmx.enabled .Values.kubernetes_remote_jmx_enabled }}jmx,{{end}}{{ if and (or .Values.monitor.container.prometheus.exporter.enabled .Values.kubernetes_monitor_node_container_prometheus_exporters_enabled) }}prometheus{{end}}
        - name: apmenv_com_ca_apm_kubernetes_autodiscovery_local
          value: "true"
{{end}}
        - name: nodename
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: apmenv_com_ca_apm_kubernetes_clusterName
          valueFrom:
            configMapKeyRef:
              key: cluster_name
              {{- if eq .Values.role "common" }}
              name: caaiops-config-common
              {{- else }}
              name: caaiops-config-{{- .Values.role | default "common" }}{{- .Values.id | default "1" }}
              {{ end }}
        - name: apmenv_snmpcollector_remote_monitor_linux_groups
          value: memory,cpu,network,diskio,hostresources,application,protocol,systemmanagement,performance,process,ipc,distributedsystem,topprocess,operatingsystem,storage,systemload,port
{{- if or .Values.monitor.container.prometheus.exporter.enabled .Values.kubernetes_monitor_node_container_prometheus_exporters_enabled}}
        - name: apmenv_com_ca_apm_kubernetes_prometheus_datafile
          value: node-exporter, cadvisor
{{end}}
        - name: apmenv_introscope_agent_hostName
          valueFrom:
            configMapKeyRef:
              key: agentNaming_daemonset_apmia_host
              {{- if eq .Values.role "common" }}
              name: caaiops-config-common
              {{- else }}
              name: caaiops-config-{{- .Values.role | default "common" }}{{- .Values.id | default "1" }}
              {{ end }}
        - name: apmenv_introscope_agent_customProcessName
          valueFrom:
            configMapKeyRef:
              key: cluster_name
             {{- if eq .Values.role "common" }}
              name: caaiops-config-common
              {{- else }}
              name: caaiops-config-{{- .Values.role | default "common" }}{{- .Values.id | default "1" }}
              {{ end }}
        - name: apmenv_introscope_agent_agentName
          valueFrom:
            configMapKeyRef:
              key: agentNaming_daemonset_apmia_agent
              {{- if eq .Values.role "common" }}
              name: caaiops-config-common
              {{- else }}
              name: caaiops-config-{{- .Values.role | default "common" }}{{- .Values.id | default "1" }}
              {{ end }}
        - name: MIN_HEAP_VAL_IN_MB
          value: "64"
        - name: REDUCE_METRIC_EXPLOSION
          value: "false"
        - name: apmenv_com_ca_apm_kubernetes_monitor_legacy
          value: {{ if .Values.agentManager.version }} "true" {{ else }} "false" {{ end }}
{{- if .Values.namespaces }}
        - name: KUBERNETES_NAMESPACE_MONITOR_LIST
          value: "{{ .Values.namespaces }}"
{{ end }}
{{- if eq .Values.role "admin" }}
        - name: storage_mount_filter
          value:  "/dev,/run,/var,/boot,/home,/mnt,/sys,/tmp,/etc,/usr"
{{ end }}
        name: podmonitor
        image:  {{ or .Values.imageName .Values.image }}
{{- if or .Values.EnableResourceLimits .Values.kubernetes_resource_bound }}
        resources:
          limits:
            cpu: 1000m
            memory: 1G
          requests:
            cpu: 200m
            memory: 300Mi
{{end}}
        livenessProbe:
{{- if or .Values.monitor.container.dockerstats.enabled }}
          exec:
            command:
              - sh
              - -c
              - find /tmp/apmia-health/extensions/Docker-health.txt -mmin -2 | grep .
{{else}}
          httpGet:
            path: /healthz
            port: 8888

{{end}}
          initialDelaySeconds: 120
          failureThreshold: 2
          periodSeconds: 180

        imagePullPolicy: Always
        #        resources:
        #          limits:
        #            cpu: 500m
        #            memory: 700Mi
        #          requests:
        #            cpu: 200m
        #            memory: 300Mi
        securityContext:
          privileged: true



        volumeMounts:
        - name: dockersock
          mountPath: /var/run/docker.sock
          readOnly: true
        - name: dev
          mountPath: /host/dev
          readOnly: true
        - name: run
          mountPath: /host/run
          readOnly: true
        - name: sys
          mountPath: /host/sys
          readOnly: true
        - name: boot
          mountPath: /host/boot
          readOnly: true
        - name: home
          mountPath: /host/home
          readOnly: true
        - name: proc
          mountPath: /host/proc
          readOnly: true
        - name: rootfs
          mountPath: /host
          readOnly: true
{{- if and (ne .Values.role "common") (ne .Values.agentManager.credential "credential")}}
        - name: config-volume-host
          mountPath: /usr/local/openshift/apmia/extensions/HostMonitor/config
{{ end }}
        - name: dockeroverlay
          mountPath: /host/var/lib/docker/overlay
        - name: dockeroverlay2
          mountPath: /host/var/lib/docker/overlay2
        - name: criooverlay
          mountPath: /host/var/lib/containers/storage/overlay
        - name: criooverlaycontainers
          mountPath: /host/var/lib/containers/storage/overlay-containers
{{- if or .Values.monitor.container.prometheus.exporter.enabled .Values.kubernetes_monitor_node_container_prometheus_exporters_enabled }}
        - name: config-volume
{{- if or .Values.isAcc }}
          mountPath: /opt/uma/extensions/{{ if .Values.extensionFolders -}} {{ .Values.extensionFolders.KubernetesRemoteMonitor | default "KubernetesRemoteMonitor" }} {{- else -}} KubernetesRemoteMonitor {{- end }}/config/prometheus
{{ else }}
          mountPath: /usr/local/openshift/apmia/extensions/KubernetesRemoteMonitor/config/prometheus
{{end}}
{{end}}
      volumes:
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      - name: criosock
        hostPath:
          path: /var/run/crio/crio.sock
      - name: dev
        hostPath:
          path: /dev
      - name: run
        hostPath:
          path: /run
      - name: sys
        hostPath:
          path: /sys
      - name: boot
        hostPath:
          path: /boot
      - name: home
        hostPath:
          path: /home
      - name: rootfs
        hostPath:
          path: /
{{- if and (ne .Values.role "common") (ne .Values.agentManager.credential "credential")}}
      - name: config-volume-host
        configMap:
          name: caaiops-config-host{{- .Values.id | default "1" }}
{{ end }}
      - name: proc
        hostPath:
          path: /proc
      - name: dockeroverlay
        hostPath:
          path: /var/lib/docker/overlay
      - name: dockeroverlay2
        hostPath:
          path: /var/lib/docker/overlay2
      - name: criooverlay
        hostPath:
          path: /var/lib/containers/storage/overlay
      - name: criooverlaycontainers
        hostPath:
          path: /var/lib/containers/storage/overlay-containers
{{- if or .Values.monitor.container.prometheus.exporter.enabled .Values.kubernetes_monitor_node_container_prometheus_exporters_enabled }}
      - name: config-volume
        configMap:
          name: caaiops-config-prometheus
{{end}}

{{ end }}
{{ end }}
{{ end }}

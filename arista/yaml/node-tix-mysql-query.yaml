# ------------------- NodeJS  Web App Deployment ------------------- #

apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2. I'm running 1.11.0
kind: Deployment
metadata:
  name: nodejs-tix-mysql-query
  namespace: nodejs-tix-mysql
  labels:
    app: nodejs-tix-mysql-query
    tier: frontend
spec:
  selector:
    matchLabels:
      app: nodejs-tix-mysql-query
      tier: frontend
  replicas: 1
  revisionHistoryLimit: 9 # how many revisions
  strategy:
    rollingUpdate:
      maxSurge: 1 # how many on top of replicas you want
      maxUnavailable: 1 # how many you can afford to be down
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nodejs-tix-mysql-query
        tier: frontend
        apm: enabled
      annotations:
        ver: "1.0"
        k8s.v1.cni.cncf.io/networks: '[
            { "name": "bridge-multus-cni",
              "interface": "net1",
              "ips": [ "172.28.0.104" ],
              "default-route": [ "172.28.0.10" ]
            }]'
    spec:
      containers:
        - name: nodejs-tix-mysql-query
          env:
          - name: JAEGER_ENDPOINT
            value: http://10.74.121.188:31426/api/traces
            #value: JAEGER_ENDPOINT_URL
          image: srikns/nodejs-tix-mysql-query:1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 3100
      nodeSelector:
        kubernetes.io/hostname: node1
---


apiVersion: v1
kind: Service
metadata:
  name: nodejs-tix-mysql-query-svc
  namespace: nodejs-tix-mysql
  labels:
    app: nodejs-tix-mysql-query-svc
spec:
  type: NodePort
  selector:
    app: nodejs-tix-mysql-query
  ports:
  - port: 3100
    name: nodejs-tix-mysql-query
    targetPort: 3100
    nodePort: 31111

<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>20</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>30 * * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

#DO NOT HAVE EMPTY SPACES BEFORE THE COMMAND OR EVEN ON AN EMPTY LINE. YOU GET COMMAND NOT FOUND ERROR

if [ -d &quot;$WORKSPACE/MobileProvisioningService/&quot; ]; then
echo &quot;$WORKSPACE/MobileProvisioningService/ exists&quot;
/bin/rm -rf $WORKSPACE/MobileProvisioningService/

fi

git clone GIT_PROJECT

echo &quot;workspace is $WORKSPACE&quot;

cd &quot;$WORKSPACE/MobileProvisioningService/config/&quot;

ENABLED=`cat NA_Feature_Flag.config |grep enabled`

echo &quot;enabled is $ENABLED&quot;



if [ X&quot;$ENABLED&quot; == &quot;X&quot; ]; then
sed -i &apos;s/disabled/enabled/g&apos; NA_Feature_Flag.config
else
sed -i &apos;s/enabled/enable/g&apos; NA_Feature_Flag.config
fi

cd &quot;$WORKSPACE/MobileProvisioningService/caapm-performance-comparator/properties&quot;

HOUR=`date +%H`

MOD=$(($HOUR%2))

echo &quot;MOD is $MOD&quot;

if [ $MOD -eq 0 ]; then
sed -i &apos;s/build.fail=false/build.fail=true/g&apos; performance-comparator.properties
else
sed -i &apos;s/build.fail=true/build.fail=false/g&apos; performance-comparator.properties
fi


cd $WORKSPACE/MobileProvisioningService/

if [ $MOD -eq 0 ]; then
sed -i &apos;s/\/\+ *sh \&quot;kubectl/sh \&quot;kubectl/g&apos; Jenkinsfile
echo ON &gt; /root/open-access/UC1_STATUS
else
sed -i &apos;s/sh \&quot;kubectl/\/\/sh \&quot;kubectl/g&apos; Jenkinsfile
echo OFF &gt; /root/open-access/UC1_STATUS
fi


git config --global user.email &quot;you@example.com&quot;
git config --global user.name &quot;Your Name&quot;


git add $WORKSPACE/MobileProvisioningService/config/NA_Feature_Flag.config
git add $WORKSPACE/MobileProvisioningService/caapm-performance-comparator/properties/performance-comparator.properties
git add $WORKSPACE/MobileProvisioningService/Jenkinsfile


git commit -m &quot;North America 5G provisioning Feature Flag Enabled&quot;


git push origin master


sleep 600

CRUMB=$(curl -s &apos;http://admin:118788150017c96442621379f5440aa8b2@localhost:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,&quot;:&quot;,//crumb)&apos;)


echo $CRUMB

curl -X POST -H &quot;$CRUMB&quot; http://admin:118788150017c96442621379f5440aa8b2@localhost:8080/job/MobileProvisioningService/disable

sed -i &apos;s/enabled/disabled/g&apos; NA_Feature_Flag.config
sed -i &apos;s/build.fail=false/build.fail=true/g&apos; performance-comparator.properties
sed -i &apos;s/\/\+ *sh \&quot;kubectl/sh \&quot;kubectl/g&apos; Jenkinsfile

git add $WORKSPACE/MobileProvisioningService/config/NA_Feature_Flag.config
git add $WORKSPACE/MobileProvisioningService/caapm-performance-comparator/properties/performance-comparator.properties
git add $WORKSPACE/MobileProvisioningService/Jenkinsfile


git commit -m &quot;Restoring to orignal state&quot;


git push origin master

sleep 20

CRUMB=$(curl -s &apos;http://admin:118788150017c96442621379f5440aa8b2@localhost:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,&quot;:&quot;,//crumb)&apos;)


echo $CRUMB

curl -X POST -H &quot;$CRUMB&quot; http://admin:118788150017c96442621379f5440aa8b2@localhost:8080/job/MobileProvisioningService/enable


sleep 2400

SLOW_SELENIUM=`kubectl get pods -n selenium |grep slow`

echo &quot;slow selenium output $SLOW_SELENIUM&quot;


if [ X&quot;$SLOW_SELENIUM&quot; != &quot;X&quot; ]; then
kubectl delete deployment selenium-standalone-slow -n selenium
fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
